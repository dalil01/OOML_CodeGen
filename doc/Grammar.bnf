;   Rule:
;   rule=...
;
;   Non-Terminal:
;   "..." or '...'
;
;   Terminal:
;   ...
;
;   Concat:
;   ... ...
;
;   Choice:
;   ...|...
;
;   Optional:
;   ...?
;
;   0 or more:
;   ...*
;
:   1 or more:
;   ...+
;
;   Grouping:
;   (...)
;
;   Exclusion:
;   ...-...
;
;   Comment:
;   ;...
;
;   Character Set:
;   [...] following POSIX extended regular expression rules in the manual grep(1)


; a rule in CAPS is one that will be abstracted by the tokenizer
; they are mostly here as a referece to make sure to follow the language specifications
; in particular, PADDING and SEPARATOR will be removed from the token listing
; and only serve to differenciate tokens for the tokenizer

CLASS_ID    = "class"
INTERFACE_ID= "interface"
PACKAGE_ID  = "package"

RESERVED    = class_id
            | interface_id
            | package_id

; "- reserved" here signifies that a NAME cannot match the reserved rule
NAME        = ([a-zA-Z_][a-zA-Z0-9_]*) - RESERVED

SPACE       = [ \t]

EOF         = "\0"

; EOL means anything ending a line
EOL         = "\n"
            | "\n\r"

; we donâ€™t care if left and right are separated
; PAD is just a shorthand for PADDING
PADDING     = (SPACE | EOL)*
PAD         = PADDING

; we need left and right to be separated
; SEP is just a shorthand for SEPARATOR
SEPARATOR   = (SPACE | EOL) PADDING
SEP         = SEPARATOR


; Starting rule
Start       = PAD list PAD EOF

list        = entry SEP list
            | entry

entry       = class
            | interface
            | reference
            | package
            | import
            | comment

; in truth, comments might be removed from the source file before lexing
comment     = "//" [^\n\r\0]*
; multiline comments
            | "/*" ([^\0] - "*/")*


; FILE being any valid url (couldn't be bothered to do that one, pain in the a to specify properly)
import      = "@" FILE



; class are always public? no scope needed?
class       = CLASS_ID SEP modifier_list NAME class_properties


class_properties
            = PAD "{" PAD class_prop_list "}"
            | PAD ":" PAD class_prop_list

class_prop_list
            = class_prop SEP class_prop_list
            | class_prop

class_prop  = attribute_with_access
            | method_with_access
            | constructor_with_access
            | access_block
            | comment

; + for public
; - for private
; # for protected
access_modifier
            = "+"
            | "-"
            | "#"


class_access_block
            = access_modifier PAD ":" PAD class_prop_block_list

class_prop_block_list
            = class_prop_block SEP class_prop_block_list
            | class_prop_block

class_prop_block
            = attribute
            | method
            | constructor
            | comment

; scope could be optional if we wanted to use the 'default' behaviour of java
attribute_with_access
            = access_modifier attribute
            | attribute

attribute
            = PAD modifier_list NAME PAD ":" PAD accessors PAD type

modifier_list
            = modifier SEP modifier_list
            | modifier SEP
            | ""

modifier    = NAME

accessors   = getter PAD setter
            | getter
            | setter PAD getter
            | setter
            | ""

getter      = "-"

setter      = "+"

method_with_access
            = access_modifier method
            | method

method      = modifier_list NAME PAD "(" argument_list PAD ")" PAD ":" PAD type

argument_list
            = PAD modifier_list NAME PAD ":" PAD type SEP argument_list
            | PAD modifier_list NAME PAD ":" PAD type

type        = NAME

constructor_with_access
            = access_modifier constructor
            | constructor

constructor = NAME PAD "(" argument_list PAD ")"

interface   = INTERFACE_ID SEP modifier_list NAME interface_properties

interface_properties
            = PAD "{" PAD interface_prop_list "}"
            | PAD ":" PAD interface_prop_list

interface_prop_list
            = interface_prop SEP interface_prop_list
            | interface_prop

interface_prop
            = attribute_with_access
            | method_with_access
            | interface_access_block
            | comment

interface_access_block
            = access_modifier PAD ":" PAD interface_prop_block_list

interface_prop_block_list
            = interface_prop_block SEP interface_prop_block_list
            | interface_prop_block

interface_prop_block
            = attribute
            | method
            | comment

; TODO
; reference
; package
